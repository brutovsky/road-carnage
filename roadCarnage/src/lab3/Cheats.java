/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab3;

import gameObjects.stuff.PlayerStats;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;

/**
 *
 * @author Levchuk
 */
public class Cheats extends javax.swing.JPanel {

	/**
	 * Creates new form Cheats
	 */
	public Cheats() {
		initComponents();
	}

	private File backgroundSource = new File(System.getProperty("user.dir") + "/src/images/startimage.jpg");
	private BufferedImage background, logo;

	public void paintComponent(Graphics g) {
		try {
			background = ImageIO.read(backgroundSource);
		} catch (IOException ex) {
			Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
		}

		g.drawImage(background, 0, 0, 1000, 700, null);

	}

	private void bEnter() {
		Clip clip2 = null;
		AudioInputStream audioInputStream = null;

		try {
			audioInputStream = AudioSystem.getAudioInputStream(
					new File(System.getProperty("user.dir") + "/src/sounds/ESC.wav").getAbsoluteFile());
		} catch (UnsupportedAudioFileException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		try {
			clip2 = AudioSystem.getClip();
		} catch (LineUnavailableException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		try {
			clip2.open(audioInputStream);
		} catch (LineUnavailableException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		clip2.start();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		cheatsField = new javax.swing.JTextField();
		enterB = new javax.swing.JButton();
		notificationsB = new javax.swing.JButton();
		backB = new javax.swing.JButton();

		setMaximumSize(new java.awt.Dimension(1000, 700));
		setMinimumSize(new java.awt.Dimension(1000, 700));
		setPreferredSize(new java.awt.Dimension(1000, 700));

		cheatsField.setBackground(new java.awt.Color(204, 0, 0));
		cheatsField.setFont(new java.awt.Font("Century Gothic", 0, 42)); // NOI18N
		cheatsField.setForeground(new java.awt.Color(255, 255, 255));
		cheatsField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		cheatsField.setText("Type the cheat");
		cheatsField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 10, true));
		cheatsField.setMaximumSize(new java.awt.Dimension(350, 100));
		cheatsField.setMinimumSize(new java.awt.Dimension(350, 100));
		cheatsField.setPreferredSize(new java.awt.Dimension(350, 100));
		cheatsField.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				cheatsFieldMousePressed(evt);
			}
		});

		enterB.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/images/enterSmall.gif"));
		enterB.setBorderPainted(false);
		enterB.setContentAreaFilled(false);
		enterB.setFocusPainted(false);
		enterB.setIconTextGap(0);
		enterB.setMaximumSize(new java.awt.Dimension(214, 38));
		enterB.setMinimumSize(new java.awt.Dimension(214, 38));
		enterB.setPreferredSize(new java.awt.Dimension(214, 38));
		enterB.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseEntered(java.awt.event.MouseEvent evt) {
				enterBMouseEntered(evt);
			}

			public void mouseExited(java.awt.event.MouseEvent evt) {
				enterBMouseExited(evt);
			}

			public void mousePressed(java.awt.event.MouseEvent evt) {
				enterBMousePressed(evt);
			}
		});

		notificationsB.setBorder(null);
		notificationsB.setBorderPainted(false);
		notificationsB.setContentAreaFilled(false);
		notificationsB.setIconTextGap(0);
		notificationsB.setMaximumSize(new java.awt.Dimension(948, 113));
		notificationsB.setMinimumSize(new java.awt.Dimension(948, 113));
		notificationsB.setPreferredSize(new java.awt.Dimension(948, 113));

		backB.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/images/backSmall.png"));
		backB.setBorderPainted(false);
		backB.setContentAreaFilled(false);
		backB.setFocusPainted(false);
		backB.setIconTextGap(0);
		backB.setMaximumSize(new java.awt.Dimension(120, 120));
		backB.setMinimumSize(new java.awt.Dimension(120, 120));
		backB.setPreferredSize(new java.awt.Dimension(120, 120));
		backB.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseEntered(java.awt.event.MouseEvent evt) {
				backBMouseEntered(evt);
			}

			public void mouseExited(java.awt.event.MouseEvent evt) {
				backBMouseExited(evt);
			}

			public void mousePressed(java.awt.event.MouseEvent evt) {
				backBMousePressed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(325, 325, 325).addComponent(cheatsField,
								javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createSequentialGroup().addGap(393, 393, 393).addComponent(enterB,
								javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createSequentialGroup().addGap(26, 26, 26).addGroup(layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(backB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(notificationsB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
				.addContainerGap(26, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(26, 26, 26)
						.addComponent(backB, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(105, 105, 105)
						.addComponent(cheatsField, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(43, 43, 43)
						.addComponent(enterB, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(48, 48, 48)
						.addComponent(notificationsB, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(108, 108, 108)));
	}// </editor-fold>//GEN-END:initComponents

	private void cheatsFieldMousePressed(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_cheatsFieldMousePressed
		cheatsField.setText("");
	}// GEN-LAST:event_cheatsFieldMousePressed

	private void enterBMouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_enterBMouseEntered
		bEnter();
		enterB.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/images/enterBig.gif"));
	}// GEN-LAST:event_enterBMouseEntered

	private void enterBMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_enterBMouseExited
		enterB.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/images/enterSmall.gif"));
	}// GEN-LAST:event_enterBMouseExited

	private void enterBMousePressed(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_enterBMousePressed
		if (cheatsField.getText().equals("HESOYAM")) {
			addMoney();
			Clip clip2 = null;
			AudioInputStream audioInputStream = null;

			try {
				audioInputStream = AudioSystem.getAudioInputStream(
						new File(System.getProperty("user.dir") + "/src/sounds/jackpot.wav").getAbsoluteFile());
			} catch (UnsupportedAudioFileException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {
				clip2 = AudioSystem.getClip();
			} catch (LineUnavailableException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {
				clip2.open(audioInputStream);
			} catch (LineUnavailableException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			clip2.start();
			notificationsB
					.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/images/moneyN.gif"));
		} else if (cheatsField.getText().equals("FULLSET")) {
			unlockLevels();
			Clip clip2 = null;
			AudioInputStream audioInputStream = null;

			try {
				audioInputStream = AudioSystem.getAudioInputStream(
						new File(System.getProperty("user.dir") + "/src/sounds/CLANK!.wav").getAbsoluteFile());
			} catch (UnsupportedAudioFileException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {
				clip2 = AudioSystem.getClip();
			} catch (LineUnavailableException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {
				clip2.open(audioInputStream);
			} catch (LineUnavailableException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			clip2.start();
			notificationsB
					.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/images/levelsN.gif"));
		} else {
			Clip clip2 = null;
			AudioInputStream audioInputStream = null;

			try {
				audioInputStream = AudioSystem.getAudioInputStream(
						new File(System.getProperty("user.dir") + "/src/sounds/wrong.wav").getAbsoluteFile());
			} catch (UnsupportedAudioFileException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {
				clip2 = AudioSystem.getClip();
			} catch (LineUnavailableException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			try {
				clip2.open(audioInputStream);
			} catch (LineUnavailableException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			clip2.start();
			notificationsB.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/images/error.gif"));
		}
	}// GEN-LAST:event_enterBMousePressed

	public void unlockLevels() {

	}

	public void addMoney() {

	}

	private void backBMouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_backBMouseEntered
		bEnter();
		backB.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/images/backBig.png"));
	}// GEN-LAST:event_backBMouseEntered

	private void backBMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_backBMouseExited
		backB.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/images/backSmall.png"));
	}// GEN-LAST:event_backBMouseExited

	private void backBMousePressed(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_backBMousePressed
		Clip clip2 = null;
		AudioInputStream audioInputStream = null;

		try {
			audioInputStream = AudioSystem.getAudioInputStream(
					new File(System.getProperty("user.dir") + "/src/sounds/DONE.wav").getAbsoluteFile());
		} catch (UnsupportedAudioFileException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		try {
			clip2 = AudioSystem.getClip();
		} catch (LineUnavailableException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		try {
			clip2.open(audioInputStream);
		} catch (LineUnavailableException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		clip2.start();
		action();
	}// GEN-LAST:event_backBMousePressed

	public void action() {

	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton backB;
	private javax.swing.JTextField cheatsField;
	private javax.swing.JButton enterB;
	private javax.swing.JButton notificationsB;
	// End of variables declaration//GEN-END:variables
}
